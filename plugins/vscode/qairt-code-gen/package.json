{
  "publisher": "QUIC",
  "name": "qairt-code-completion",
  "version": "1.5.3",
  "displayName": "QAIRT Code Completion",
  "description": "VSCode extension for AI NPU Code Assistant with QAIRT",
  "icon": "media/logo.png",
  "author": "",
  "contributors": [],
  "license": "https://github.com/quic/wos-ai-plugins/blob/main/LICENSE",
  "homepage": "",
  "repository": {
    "type": "git",
    "url": "https://github.com/quic/wos-ai-plugins"
  },
  "bugs": {
    "url": "https://github.com/quic/wos-ai-plugins/issues"
  },
  "engines": {
    "vscode": "^1.79.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Other"
  ],
  "keywords": [
    "ai",
    "autocomplete",
    "intellicode",
    "intellisense",
    "method completion",
    "python",
    "snippets",
    "QNN",
    "QAIRT",
    "Qualcomm"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension",
  "scripts": {
    "analyze:bundle": "webpack --env analyzeBundle",
    "vscode:prepublish": "npm run clear-out && npm run build:side-panel && webpack --mode production",
    "watch": "webpack --mode development --watch",
    "build": "webpack --mode development",
    "start:side-panel": "npm run dev --workspace side-panel-ui",
    "build:side-panel": "npm run build --workspace side-panel-ui",
    "prettier": "prettier --write src/",
    "prettier:check": "prettier --check src/",
    "lint": "eslint . --max-warnings 0",
    "lint:fix": "eslint . --fix",
    "lint:side-panel": "npm run lint -w side-panel-ui",
    "lint:all": "npm run lint && npm run lint --workspaces",
    "test": "node ./out/test/runTest.js",
    "vsce:package": "vsce package",
    "vsce:publish": "vsce publish",
    "ovsx:publish": "ovsx publish",
    "clear-out": "rimraf ./out"
  },
  "devDependencies": {
    "@types/glob": "8.1.0",
    "@types/mocha": "10.0.1",
    "@types/mustache": "4.2.2",
    "@types/node": "^16.17.0",
    "@types/vscode": "^1.79.0",
    "@types/webpack-bundle-analyzer": "4.6.0",
    "@typescript-eslint/eslint-plugin": "6.2.1",
    "@typescript-eslint/parser": "6.2.1",
    "@vscode/test-electron": "2.3.4",
    "@vscode/vsce": "2.20.0",
    "copy-webpack-plugin": "11.0.0",
    "eslint": "8.46.0",
    "eslint-config-airbnb-typescript": "17.1.0",
    "eslint-config-prettier": "8.10.0",
    "eslint-import-resolver-typescript": "3.5.5",
    "eslint-plugin-import": "2.28.0",
    "glob": "10.3.3",
    "ncp": "2.0.0",
    "ovsx": "0.8.2",
    "prettier": "3.0.1",
    "rimraf": "5.0.1",
    "terser-webpack-plugin": "5.3.9",
    "ts-loader": "9.4.4",
    "typescript": "5.1.6",
    "webpack": "5.88.2",
    "webpack-bundle-analyzer": "4.9.0",
    "webpack-cli": "5.1.4"
  },
  "dependencies": {
    "lru-cache": "10.0.1",
    "mustache": "4.2.0",
    "node-fetch": "3.3.2"
  },
  "capabilities": {
    "virtualWorkspaces": true,
    "untrustedWorkspaces": {
      "supported": true
    }
  },
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "qairt-code-sidebar",
          "title": "QAIRT Code",
          "icon": "media/sidebar-icon.png"
        }
      ]
    },
    "views": {
      "qairt-code-sidebar": [
        {
          "id": "qairt-code-side-panel",
          "name": "QAIRT Code",
          "type": "webview",
          "contextualTitle": "QAIRT Code"
        }
      ]
    },
    "commands": [
      {
        "command": "qairtCode.generateInlineCompletion",
        "category": "QAIRT Code",
        "title": "Generate Inline Code Completion"
      },
      {
        "command": "qairtCode.generateInlineCompletionTab",
        "category": "QAIRT Code",
        "title": "Generate Inline Code Completion In New Tab"
      },
      {
        "command": "qairtCode.generateDocstring",
        "category": "QAIRT Code",
        "title": "Generate Docstring",
        "when": "editorLangId == python"
      },
      {
        "command": "qairt.startServerNative",
        "category": "QAIRT Code",
        "title": "Start Server Native"
      },
      {
        "command": "qairtCode.stopServerNative",
        "category": "QAIRT Code",
        "title": "Stop Server Native"
      },
      {
        "command": "qairtCode.checkConnection",
        "category": "QAIRT Code",
        "title": "Check Server Connection"
      },
      {
        "command": "qairtCode.openSettings",
        "category": "QAIRT Code",
        "title": "Show QAIRT Code Settings",
        "icon": "$(gear)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "qairtCode.openSettings",
          "when": "view == qairt-code-side-panel",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "command": "qairtCode.generateInlineCompletion",
          "when": "editorFocus",
          "group": "qairt-code-completion@1"
        },
        {
          "command": "qairtCode.generateInlineCompletionTab",
          "when": "editorFocus",
          "group": "qairt-code-completion@2"
        }
      ]
    },
    "configuration": [
      {
        "title": "QAIRT Code",
        "properties": {
          "qairtCode.model": {
            "order": 0,
            "type": "string",
            "default": "llama-v3.1-8b",
            "enum": [
              "llama-v2-7b",
              "llama-v3.1-8b"
            ],
            "description": "Which model to use for code generation."
          },
          "qairtCode.profile": {
            "order": 1,
            "type": "string",
            "default": "Code Generation",
            "enum": [
              "Code Generation",
              "Code Refactor",
              "Test Expert",
              "Code Debugger"
            ],
            "description": "Which profile to use for code generation."
          },
          "qairtCode.useCustomSystemPrompt": {
            "order": 3,
            "type": "boolean",
            "default": "false",
            "description": "When checked the custom system prompt will be used."
          },
          "qairtCode.customSystemPrompt": {
            "order": 4,
            "type": "string",
            "default": "",
            "markdownDescription": "Custom system prompt to use. Upon changing this, you would need to restart the model."
          },
          "qairtCode.serverUrl": {
            "order": 5,
            "type": "string",
            "default": "http://127.0.0.1:8002",
            "markdownDescription": "QAIRT Code server URL with host and port (e.g. `http://127.0.0.1:8002`) where requests will be sent to."
          },
          "qairtCode.serverRequestTimeout": {
            "order": 6,
            "type": "integer",
            "exclusiveMinimum": 0,
            "default": 30,
            "markdownDescription": "Server request timeout in seconds after which request will be aborted. Constrains the number of generated tokens in non-streaming mode."
          },
          "qairtCode.minNewTokens": {
            "order": 7,
            "type": "number",
            "default": 1,
            "description": "Minimum of new generated tokens."
          },
          "qairtCode.maxNewTokens": {
            "order": 8,
            "type": "number",
            "default": 100,
            "description": "Maximum of new generated tokens."
          },
          "qairtCode.streamInlineCompletion": {
            "order": 9,
            "type": "boolean",
            "default": "false",
            "description": "When checked inline complention will be generated in streaming mode"
          },
          "qairtCode.fillInTheMiddleMode": {
            "order": 10,
            "type": "boolean",
            "default": "false",
            "description":
              "When checked, text before (above) and after (below) the cursor will be used for completion generation. When unckecked, only text before (above) the cursor will be used."
          },
          "qairtCode.startToken": {
            "order": 11,
            "type": "string",
            "default": "< |fim_begin| >",
            "description":
              "String that is sent to server is in format: `{startToken}{text above cursor}{middleToken}{text below cursor if fillInTheMiddleMode=true}{endToken}`. Leave `startToken`, `middleToken`, or `endToken` empty if there is no special token for those placements."
          },
          "qairtCode.middleToken": {
            "order": 12,
            "type": "string",
            "default": "<｜fim▁hole｜>",
            "description":
              "String that is sent to server is in format: `{startToken}{text above cursor}{middleToken}{text below cursor if fillInTheMiddleMode=true}{endToken}`. Leave `startToken`, `middleToken`, or `endToken` empty if there is no special token for those placements."
          },
          "qairtCode.endToken": {
            "order": 13,
            "type": "string",
            "default": "<｜fim▁end｜>",
            "description":
              "String that is sent to server is in format: `{startToken}{text above cursor}{middleToken}{text below cursor if fillInTheMiddleMode=true}{endToken}`. Leave `startToken`, `middleToken`, or `endToken` empty if there is no special token for those placements."
          },
          "qairtCode.stopToken": {
            "order": 14,
            "type": "string",
            "default": "<|endoftext|>",
            "description": "(Optional) Stop token."
          }
        }
      }
    ],
    "keybindings": [
      {
        "command": "qairtCode.generateInlineCompletion",
        "key": "ctrl+alt+space",
        "mac": "ctrl+alt+space",
        "when": "editorTextFocus"
      },
      {
        "command": "qairtCode.generateInlineCompletionTab",
        "key": "ctrl+alt+shift+1",
        "mac": "ctrl+alt+shift+1",
        "when": "editorTextFocus"
      },
      {
        "command": "qairtCode.stopGeneration",
        "key": "escape",
        "mac": "escape",
        "when": "qairtCode.generating"
      },
      {
        "command": "qairtCode.acceptInlineCompletion",
        "key": "tab",
        "when": "inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
      }
    ]
  },
  "workspaces": [
    "side-panel-ui"
  ]
}
